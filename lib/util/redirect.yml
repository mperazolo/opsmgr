---
# Copyright 2017, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: all
  become: true
  gather_facts: no

  vars_files:
    - defaults.yml

  vars:
    - path: /tmp/.opsmgr
    - site: run.yml
    - pull: []
    - test: false

  tasks:

    - debug: var=playbook_dir
    - debug: var=play

    - name: ensure remote directory exists
      file: path={{ path }} state=directory

    - name: copy playbook to remote host for execution
      synchronize: src={{ play }} dest={{ path }}/ mode=push rsync_path="sudo rsync"

    - name: copy library to remote host
      synchronize: src={{ opsmgr_lib }} dest={{ path }}/ mode=push rsync_path="sudo rsync"

    - name: copy profile to remote host
      synchronize: src={{ opsmgr_prl }} dest={{ path }}/ mode=push rsync_path="sudo rsync"
      when: opsmgr_prl is defined

    - name: copy playbooks var files to remote host (mkdir)
      file: path={{ path }}/playbooks state=directory

    - name: copy playbooks var files to remote host
      copy:
        src: "{{ opsmgr_dir }}/playbooks/{{ item }}"
        dest: "{{ path }}/playbooks/{{ item }}"
      with_items:
        - vars.yml
        - defaults.yml
        - deploy_environment.yml

    - name: remove remote facts and logs if they exist
      file: path={{ path }}/{{ play|basename }}/{{ item }} state=absent
      with_items:
        - ansible.log
        - .facts/

    - name: remote playbook command to run
      debug: msg='ansible-playbook -e "opsmgr_dir={{ path }}" -e "opsmgr_lib={{ path }}/lib" -e "opsmgr_prl={{ path }}/profile" {{ site }}'

    - name: execute remote playbook command
      become: true
      ignore_errors: true
      shell: >
        ansible-playbook
        -e "opsmgr_dir={{ path }}"
        -e "opsmgr_lib={{ path }}/lib"
        -e "opsmgr_prl={{ path }}/profile"
        {{ site }}
      args:
          chdir: "{{ path }}/{{ play|basename }}"
      when: test == false

    - name: retrieve remote execution log file
      fetch: src={{ path }}/{{ play|basename }}/ansible.log dest={{ play }}/run.log flat=yes

    - name: retrieve remote files if requested
      synchronize: src={{ path }}/{{ play|basename }}/{{ item }} dest={{ play }}/{{ item }} mode=pull
      with_items: "{{ pull }}"

    #- name: remove temp files
    #  file: path={{ path }} state=absent
    #  when: test == false


