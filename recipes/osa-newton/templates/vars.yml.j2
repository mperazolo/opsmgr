# OpsMgr profile - generated by ansible
#

# new containers to create
containers:
  - name: nagios
    role: nagios
    release: xenial
    ports:
      - { name: "http", host: 8001, container:   80 }
      - { name: "nrpe", host: 5601, container: 5666 }
    mount: usr/local/nagios/opsmgr/nagios_config
  - name: logstash
    role: logstash
    release: xenial
    ports:
      - { name: "json", host: 5140, container: 5140 }
      - { name: "sysl", host: 5544, container: 5544 }
      - { name: "beats", host: 5044, container: 5044 }
    mount: etc/opsmgr/shared/logstash
  - name: elasticsearch
    role: elasticsearch
    release: xenial
    ports:
      - { name: "http", host: 9200, container: 9200 }
    mount: var/lib/elasticsearch
  - name: kibana
    role: kibana
    release: xenial
    ports:
      - { name: "https", host: 8443, container: 8443 }
    mount: etc/opsmgr/shared/kibana

# containers imported from osa to reuse and install opsmgr components
import_containers:
{% for item in groups['horizon_container'] %}
{% if hostvars[item].component == 'horizon' %}
{% set physical_host = hostvars[item].physical_host %}
  - name:     {{ hostvars[item].container_name }}
    role:     core
    address:  {{ hostvars[item].container_address }}
    host:     {{ physical_host }}
    hostaddr: {{ hostvars[physical_host].ansible_host }}
    hostname: {{ item }}
{% endif %}
{% endfor %}

# imported ssh key to use for deployment
provisioning_key_prv: "/root/.ssh/id_rsa"
provisioning_key_pub: "/root/.ssh/id_rsa.pub"

# container network installation
create_lxc_network: true
main_lxc_interface: "eth1"
opsmgr_lxc_nets:
  - name: "mgmt"
    bridge: "br-mgmt"
    interface: "eth1"
    netmask: "{{ cidr_networks.container | ipaddr('netmask') }}"
    type: "veth"

{% set globals = {'mtu_found':False} %}
{% for net in global_overrides.provider_networks %}
{% if net.network.container_bridge == "br-mgmt" %}
{% if 'container_mtu' in net.network %}
lxc_container_default_mtu: {{ net.network.container_mtu }}
{% set _ = globals.update({'mtu_found':True}) %}
{% endif %}
{% endif %}
{% endfor %}
{% if globals.mtu_found == False %}
lxc_container_default_mtu: 1500
{% endif %}

lxc_cidr: "{{ cidr_networks.container }}"

lxc_blacklist: [
{% for node in groups['hosts'] %}
{{ hostvars[node].container_address }},
{% endfor %}
{% for node in groups['all_containers'] %}
{{ hostvars[node].container_address }},
{% endfor %}
0.0.0.0
]

# database installation
install_mysql: false
db_login_user: "{{ galera_root_user }}"
db_login_password: "{{ galera_root_password }}"
db_login_host: "{{ global_overrides.internal_lb_vip_address }}"
db_user: "opsmgr"
db_host: "{{ global_overrides.internal_lb_vip_address }}"

# user interface installation
install_ui: true
floating_ip: "{{ global_overrides.external_lb_vip_address }}"
ui_enabled: "{{ horizon_lib_dir | dirname | replace('untagged', openstack_release) }}/site-packages/openstack_dashboard/local"
swift_bin: "{{ swift_bin | replace('untagged', openstack_release) }}"

# proxy mode installation - valid values: iptables or haproxy
install_haproxy: false
internal_ip: "{{ global_overrides.internal_lb_vip_address }}"

# Ganglia configuration
install_ganglia: false
