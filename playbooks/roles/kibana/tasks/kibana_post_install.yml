---
# copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


- name: Deploy Kibana configuration files
  template:
    src: "{{ item }}"
    dest: "{{ config_dir }}/{{ item }}"
    owner: "root"
    group: "root"
  with_items:
    - kibana.yml
  notify: Restart Kibana
  tags:
    - kibana-post-install

- name: Deploy Kibana service configuration file
  template:
    src: "{{ item }}"
    dest: "/etc/default/{{ item }}"
    owner: "root"
    group: "root"
  with_items:
    - kibana
  notify: Restart Kibana
  tags:
    - kibana-post-install

- name: Restart Kibana before proceeding
  meta: flush_handlers

- name: Wait for Kibana port
  wait_for:
    host: "127.0.0.1"
    port: "{{ kibana_app_port }}"
  tags:
    - kibana-post-install

- name: os dependent post install
  include: "{{ os_file }}"
  with_first_found:
     - files:
         - "tasks/kibana_post_{{ ansible_os_family | lower }}.yml"
       skip: true
  loop_control:
    loop_var: os_file

- name: Guessing current kibana version
  shell: cat package.json | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["version"];'
  args:
    chdir: "{{ install_dir }}"
  register: kibana_version
  tags:
    - kibana-post-install

- name: Import Kibana's LS index configuration in ES
  uri:
    method: "PUT"
    url: "{{ kibana_index_on_elasticsearch }}{{ item.where }}"
    # NOTE(sigmavirus24): There's a bug in Ansible < 2.1.x where without the
    # leading ' ' this will be interpreted as a dictionary (EVEN WITH to_json)
    # and so the only way to unbreak this is to use a leading ' '. ._.
    body: " {{ item.what }}"
    body_format: "json"
    # NOTE(sigmavirus24): The first request we make may return a 409 status
    # code. This is fine because it means we've already configured this once.
    status_code: 200,201,409
  with_items:
    - where: "/index-pattern/logstash-*?op_type=create"
      what: '{"title" : "logstash-*",  "timeFieldName": "@timestamp"}'
    - where: "/config/{{ kibana_version.stdout }}"
      what: '{"defaultIndex" : "logstash-*"}'
  environment:
      no_proxy: "{{ elasticsearch_ip }}"
  tags:
    - kibana-post-install


- name: Create tmp directory for the dashboards
  file:
      path: "{{ kibana_temp_directory }}"
      state: directory
      mode: 0700
  tags:
    - kibana-post-install

- name: copy visualizations and dashboards to server
  synchronize:
       src:  ./
       dest: "{{ kibana_temp_directory }}"
       mode: push
       compress: yes
  tags:
    - kibana-post-install

- name: Import the dashboards
  shell: "./load.sh -l {{ elasticsearch_ip }}:{{ elasticsearch_http_port }}"
  args:
    chdir: "{{ kibana_temp_directory }}"
  notify: Restart Apache
  environment:
      no_proxy: "{{ elasticsearch_ip }}"
  tags:
    - kibana-apache
    - kibana-post-install

- name: Import the Metricbeat template file before the index file
  uri:
    method: "PUT"
    url: "http://{{ elasticsearch_ip }}:{{ elasticsearch_http_port}}/_template/metricbeat"
    body: "{{ lookup('file', 'files/es_templates/metricbeat.template.json') }}"
    body_format: "json"
    status_code: 200,201,409
  environment:
      no_proxy: "{{ elasticsearch_ip }}"
  tags:
    - kibana-post-install

- name: Download Metricbeat dashboard zip
  get_url:
    url: "{{ item.url }}/{{ item.file }}"
    dest: "/tmp/{{ item.file }}"
    checksum: "{{ item.checksum }}"
  with_items: "{{ beats_dashboards }}"
  register: beats_dashboard_download
  until: beats_dashboard_download | success
  retries: 5
  delay: 2
  tags:
    - kibana-post-install

- name: Extract the dashboard zip
  unarchive:
    src: "/tmp/{{ item.file }}"
    dest: "{{ kibana_temp_directory }}"
    copy: no
  with_items: "{{ beats_dashboards }}"
  tags:
    - kibana-post-install

- name: Read in the metricbeat_index_file
  slurp:
    src: "{{ kibana_temp_directory }}/{{ metricbeat_index_file }}"
  register: metricbeat_index_text
  tags:
    - kibana-post-install

- name: Import Metricbeat Index Configuration
  uri:
    method: "PUT"
    url: "{{ kibana_index_on_elasticsearch }}/index-pattern/metricbeat-*?op_type=create"
    body: "{{ metricbeat_index_text.content|b64decode }}"
    body_format: "json"
    status_code: 200,201,409
  environment:
      no_proxy: "{{ elasticsearch_ip }}"
  tags:
    - kibana-post-install

- name: Remove tmp directory for the code
  file:
       path: "{{ kibana_temp_directory }}"
       state: absent
  tags:
    - kibana-post-install
