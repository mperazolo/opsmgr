---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


# Kibana is not supported on ppc64le.yml, no deb package is provided.
# Kibana is written in nodejs, so we will download the x86 tar.gz
# kibana image and replace the nodejs binary with the ppc64le binrary.


- name: include vars file
  include_vars: ppc64le.yml

- name: installs prereq packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ kibana_pre_packages }}"
  register: install_preq
  until: install_preq|success
  retries: 5
  delay: 2
  tags:
    - kibana-install-prereq
    - kibana-pre-install

- name: Create the Kibana System User
  user:
    name: "kibana"
    shell: "/bin/bash"
    system: "yes"
    createhome: "no"

- name: create temporary directory for install
  file:
    path: "{{ temp_install_directory }}"
    state: directory

- name: Download kibana & nodejs
  get_url:
    url: "{{ item.url }}/{{ item.file }}"
    dest: "/tmp/{{ item.file }}"
    checksum: "{{ item.checksum }}"
  with_items: "{{ kibana_packages }}"
  register: kibana_download
  until: kibana_download | success
  retries: 5
  delay: 2

- name: download and extract kibana
  unarchive:
    src: "/tmp/{{ item.file }}"
    dest: "{{ temp_install_directory }}"
    creates: "{{ temp_install_directory }}/{{ item.directory }}"
    copy: no
  with_items: "{{ kibana_packages }}"

- name: make sure /opt exists
  file:
    path: "/opt"
    state: directory

- name: move the kibana directory to /opt/kibana
  command: mv "{{ temp_install_directory }}/{{ kibana_directory}}" "/opt/kibana"
  args:
    creates: /opt/kibana

- name: move the nodejs binary to /opt/kibana/node/bin
  copy:
    src: "{{ temp_install_directory }}/{{ nodejs_directory}}/bin/node"
    dest: "/opt/kibana/node/bin"
    remote_src: True

- name: Set permssions on /opt/kibana
  file:
    path: "/opt/kibana"
    state: "directory"
    recurse: "yes"
    owner: "kibana"
    group: "root"

- name: delete temporary directory
  file:
    path: "{{ temp_install_directory }}"
    state: absent

- name: Lay down kibana service file
  copy:
    src: "kibana"
    dest: "/etc/init.d/kibana"
    mode: 0755

- name: Install pip packages
  pip:
    name: "{{ item }}"
    state: latest
    extra_args: "{{ pip_install_options |default('') }}"
  register: install_pip_packages
  until: install_pip_packages |success
  retries: 5
  delay: 2
  with_items: "{{ kibana_pip_packages }}"

- name: Enable Kibana Service
  service:
    name: kibana
    enabled: yes
